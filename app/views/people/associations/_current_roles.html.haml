.block--border__bottom
  %h2= t('people.associations.current_roles')
  %ul.list--block
    - current_roles.fetch('GovernmentIncumbency', []).each do |role|
      = render 'current_role', role: role, role_type: t('people.associations.government_role'), role_title: "#{role.government_position.name}"

    - current_roles.fetch('OppositionIncumbency', []).each do |role|
      = render 'current_role', role: role, role_type: t('people.associations.opposition_role'), role_title: "#{role.opposition_position.name}"

    - current_roles.fetch('SeatIncumbency', []).each do |role|
      - if role.class == RoleGroupingHelper::RoleGroupedObject || role&.house_of_commons?
        - if role.class == RoleGroupingHelper::RoleGroupedObject
          - first_line_start = t('people.associations.mp_for')
          - first_line_end = link_to(role.nodes[0].constituency.name, constituency_path(role.nodes[0].constituency.graph_id))
          - first_line = "#{first_line_start} #{first_line_end}".html_safe
          = render 'current_role', role: role, role_type: t('people.associations.parliamentary_role'), role_title: first_line
        - else
          - first_line_start = t('people.associations.mp_for')
          - first_line_end = link_to(role.constituency.name, constituency_path(role.constituency.graph_id))
          - first_line = "#{first_line_start} #{first_line_end}".html_safe
          = render 'current_role', role: role, role_type: "#{t('people.associations.parliamentary_role').capitalize}", role_title: first_line
      - else
        = render 'current_role', role: role, role_type: "#{t('people.associations.parliamentary_role').capitalize}", role_title: "#{t('member').capitalize} #{t('of_the')} #{t('house_of_lords')}"

    - current_roles.fetch('FormalBodyMembership', []).each do |role|
      = render 'current_role', role: role, role_type: "#{t('people.associations.committee_role').capitalize}", role_title: "#{t('member').capitalize} #{t('of_the')} #{role.formal_body.name}"
