%p
  - unless @constituency.current?
    = "#{t('constituency').capitalize}"
    = "#{t('from')} #{l(@constituency.start_date, format: :default)}" unless @constituency.start_date.nil?
    = @constituency.end_date.nil? ? t('to_present') : " #{t('to')} #{l(@constituency.end_date, format: :default)}"
- if @constituency.current?
  %h2= "#{t('mp')}"
  - if Parliament::Utils::Helpers::FlagHelper.dissolution?
    = render partial: 'shared/dissolution_message'
  - elsif @current_incumbency
    %ul.list--pipe
      %li
        .card
          .card__details
            %h3= link_to(@current_incumbency.member.display_name, person_path(@current_incumbency.member.graph_id))
            %p= @current_incumbency.date_range
  - elsif Parliament::Utils::Helpers::FlagHelper.election_period?
    = render partial: 'shared/election_message'
  - else @current_incumbency.nil?
    .status--highlight.theme--caution
      %p
        = t('no_content.empty_list.no_mp')

- else
  .status--highlight.theme--caution
    %p= t('.former_constituency', current_constituencies_link: link_to(t('.current_constituencies_link').capitalize, constituencies_current_path)).html_safe

- if @seat_incumbencies.size > 0
  %h2= "#{t('former').capitalize} #{t('mp_plural')}"
  %ul.list--pipe
    - @seat_incumbencies.each do |seat_incumbency|
      - if !seat_incumbency.current?
        %li
          .card
            .card__details
              %h3= link_to(seat_incumbency.member.display_name, person_path(seat_incumbency.member.graph_id))
              %p= seat_incumbency.date_range
